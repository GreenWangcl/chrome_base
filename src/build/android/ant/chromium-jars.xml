<!--
  Copyright (c) 2012 The Chromium Authors. All rights reserved.
  Use of this source code is governed by a BSD-style license that can be
  found in the LICENSE file.
-->
<project name="chromium-jars" default="dist">
  <!--
    Common ant build file for Java libraries. For building new libraries, see build/java.gypi.
  -->
  <description>
    Building ${PROJECT_NAME}/ java source code with ant.
  </description>

  <import file="common.xml"/>

  <path id="javac.custom.classpath">
    <filelist files="${INPUT_JARS_PATHS}"/>
    <pathelement location="${ANDROID_SDK}/android.jar"/>
  </path>

  <path id="javac.srcdirs.additional">
    <filelist files="${ADDITIONAL_SRC_DIRS}"/>
    <filelist files="${GENERATED_SRC_DIRS}"/>
  </path>

  <property-value
    name="javac.srcdir"
    value="src:${toString:javac.srcdirs.additional}"
  />

  <property-location name="out.dir" location="${OUT_DIR}" check-exists="false" />

  <condition property="javac_includes_message"
             value=""
             else="Include filter: ${JAVAC_INCLUDES}">
    <equals arg1="${JAVAC_INCLUDES}" arg2=""/>
  </condition>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${out.dir}"/>

    <!-- Remove all .class files from out.dir. This prevents inclusion of
         incorrect .class files in the final .jar. For example, if a .java file
         was deleted, the .jar should not contain the .class files for that
         .java from previous builds.
    -->
    <delete>
      <fileset dir="${out.dir}" includes="**/*.class"/>
    </delete>
  </target>

  <target name="compile" depends="init" description="Compiles source.">
    <fail message="Error: javac.custom.classpath is not set. Please set it to
        classpath for javac.">
      <condition>
        <not><isreference refid="javac.custom.classpath"/></not>
      </condition>
    </fail>

    <javac
        srcdir="${javac.srcdir}"
        destdir="${out.dir}"
        classpathref="javac.custom.classpath"
        debug="true"
        includeantruntime="false"
        includes="${JAVAC_INCLUDES}">
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <target name="dist" depends="compile"
      description="Generate ${JAR_NAME}.">
    <!-- Create the distribution directory.  We exclude R.class and R$*.class
         files since new versions of these files with the correct resource -> ID
         mapping will be provided when we build each individual apk. -->
    <jar
      jarfile="${lib.java.dir}/${JAR_NAME}"
      excludes="**/R.class **/R$*.class"
      basedir="${out.dir}"
    />

    <!-- If Gyp thinks this output is stale but Ant doesn't, the modification
         time should still be updated. Otherwise, this target will continue to
         be rebuilt in future builds.
    -->
    <touch file="${lib.java.dir}/${JAR_NAME}"/>
  </target>

  <target name="clean" description="clean up">
    <!-- Delete the appropriate directory trees -->
    <delete dir="${out.dir}"/>
  </target>
</project>
