/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Enum Values                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace XCore {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    ADD_2rus	= 17,
    ADD_3r	= 18,
    ADJCALLSTACKDOWN	= 19,
    ADJCALLSTACKUP	= 20,
    ANDNOT_2r	= 21,
    AND_3r	= 22,
    ASHR_l2rus	= 23,
    ASHR_l3r	= 24,
    BAU_1r	= 25,
    BITREV_l2r	= 26,
    BLA_1r	= 27,
    BLRF_lu10	= 28,
    BLRF_u10	= 29,
    BRBF_lru6	= 30,
    BRBF_ru6	= 31,
    BRBT_lru6	= 32,
    BRBT_ru6	= 33,
    BRBU_lu6	= 34,
    BRBU_u6	= 35,
    BRFF_lru6	= 36,
    BRFF_ru6	= 37,
    BRFT_lru6	= 38,
    BRFT_ru6	= 39,
    BRFU_lu6	= 40,
    BRFU_u6	= 41,
    BR_JT	= 42,
    BR_JT32	= 43,
    BYTEREV_l2r	= 44,
    CHKCT_2r	= 45,
    CHKCT_rus	= 46,
    CLRE_0R	= 47,
    CLRPT_1R	= 48,
    CLRSR_branch_lu6	= 49,
    CLRSR_branch_u6	= 50,
    CLRSR_lu6	= 51,
    CLRSR_u6	= 52,
    CLZ_l2r	= 53,
    CRC8_l4r	= 54,
    CRC_l3r	= 55,
    DCALL_0R	= 56,
    DENTSP_0R	= 57,
    DGETREG_1r	= 58,
    DIVS_l3r	= 59,
    DIVU_l3r	= 60,
    DRESTSP_0R	= 61,
    DRET_0R	= 62,
    ECALLF_1r	= 63,
    ECALLT_1r	= 64,
    EDU_1r	= 65,
    EEU_1r	= 66,
    ENDIN_2r	= 67,
    ENTSP_lu6	= 68,
    ENTSP_u6	= 69,
    EQ_2rus	= 70,
    EQ_3r	= 71,
    EXTSP_lu6	= 72,
    EXTSP_u6	= 73,
    FREER_1r	= 74,
    FREET_0R	= 75,
    GETD_l2r	= 76,
    GETED_0R	= 77,
    GETET_0R	= 78,
    GETID_0R	= 79,
    GETKEP_0R	= 80,
    GETKSP_0R	= 81,
    GETN_l2r	= 82,
    GETPS_l2r	= 83,
    GETR_rus	= 84,
    GETST_2r	= 85,
    GETTS_2r	= 86,
    INCT_2r	= 87,
    INITCP_2r	= 88,
    INITDP_2r	= 89,
    INITLR_l2r	= 90,
    INITPC_2r	= 91,
    INITSP_2r	= 92,
    INPW_l2rus	= 93,
    INSHR_2r	= 94,
    INT_2r	= 95,
    IN_2r	= 96,
    KCALL_1r	= 97,
    KRET_0R	= 98,
    LADD_l5r	= 99,
    LD16S_3r	= 100,
    LD8U_3r	= 101,
    LDA16B_l3r	= 102,
    LDA16F_l3r	= 103,
    LDAPF_lu10	= 104,
    LDAPF_lu10_ba	= 105,
    LDAPF_u10	= 106,
    LDAWB_l2rus	= 107,
    LDAWB_l3r	= 108,
    LDAWCP_lu6	= 109,
    LDAWCP_u6	= 110,
    LDAWDP_lru6	= 111,
    LDAWDP_ru6	= 112,
    LDAWFI	= 113,
    LDAWF_l2rus	= 114,
    LDAWF_l3r	= 115,
    LDAWSP_lru6	= 116,
    LDAWSP_lru6_RRegs	= 117,
    LDAWSP_ru6	= 118,
    LDAWSP_ru6_RRegs	= 119,
    LDC_lru6	= 120,
    LDC_ru6	= 121,
    LDET_0R	= 122,
    LDIVU_l5r	= 123,
    LDSED_0R	= 124,
    LDSPC_0R	= 125,
    LDSSR_0R	= 126,
    LDWCP_lru6	= 127,
    LDWCP_ru6	= 128,
    LDWDP_lru6	= 129,
    LDWDP_ru6	= 130,
    LDWFI	= 131,
    LDWSP_lru6	= 132,
    LDWSP_ru6	= 133,
    LDW_2rus	= 134,
    LDW_3r	= 135,
    LMUL_l6r	= 136,
    LSS_3r	= 137,
    LSUB_l5r	= 138,
    LSU_3r	= 139,
    MACCS_l4r	= 140,
    MACCU_l4r	= 141,
    MJOIN_1r	= 142,
    MKMSK_2r	= 143,
    MKMSK_rus	= 144,
    MSYNC_1r	= 145,
    MUL_l3r	= 146,
    NEG	= 147,
    NOT	= 148,
    OR_3r	= 149,
    OUTCT_2r	= 150,
    OUTCT_rus	= 151,
    OUTPW_l2rus	= 152,
    OUTSHR_2r	= 153,
    OUTT_2r	= 154,
    OUT_2r	= 155,
    PEEK_2r	= 156,
    REMS_l3r	= 157,
    REMU_l3r	= 158,
    RETSP_lu6	= 159,
    RETSP_u6	= 160,
    SELECT_CC	= 161,
    SETCLK_l2r	= 162,
    SETCP_1r	= 163,
    SETC_l2r	= 164,
    SETC_lru6	= 165,
    SETC_ru6	= 166,
    SETDP_1r	= 167,
    SETD_2r	= 168,
    SETEV_1r	= 169,
    SETKEP_0R	= 170,
    SETN_l2r	= 171,
    SETPSC_2r	= 172,
    SETPS_l2r	= 173,
    SETPT_2r	= 174,
    SETRDY_l2r	= 175,
    SETSP_1r	= 176,
    SETSR_branch_lu6	= 177,
    SETSR_branch_u6	= 178,
    SETSR_lu6	= 179,
    SETSR_u6	= 180,
    SETTW_l2r	= 181,
    SETV_1r	= 182,
    SEXT_2r	= 183,
    SEXT_rus	= 184,
    SHL_2rus	= 185,
    SHL_3r	= 186,
    SHR_2rus	= 187,
    SHR_3r	= 188,
    SSYNC_0r	= 189,
    ST16_l3r	= 190,
    ST8_l3r	= 191,
    STET_0R	= 192,
    STSED_0R	= 193,
    STSPC_0R	= 194,
    STSSR_0R	= 195,
    STWDP_lru6	= 196,
    STWDP_ru6	= 197,
    STWFI	= 198,
    STWSP_lru6	= 199,
    STWSP_ru6	= 200,
    STW_2rus	= 201,
    STW_l3r	= 202,
    SUB_2rus	= 203,
    SUB_3r	= 204,
    SYNCR_1r	= 205,
    TESTCT_2r	= 206,
    TESTLCL_l2r	= 207,
    TESTWCT_2r	= 208,
    TSTART_1R	= 209,
    WAITEF_1R	= 210,
    WAITET_1R	= 211,
    WAITEU_0R	= 212,
    XOR_l3r	= 213,
    ZEXT_2r	= 214,
    ZEXT_rus	= 215,
    INSTRUCTION_LIST_END = 216
  };
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Descriptors                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const uint16_t ImplicitList1[] = { XCore::SP, 0 };
static const uint16_t ImplicitList2[] = { XCore::R0, XCore::R1, XCore::R2, XCore::R3, XCore::R11, XCore::LR, 0 };
static const uint16_t ImplicitList3[] = { XCore::R11, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { XCore::RRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { XCore::GRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };

extern const MCInstrDesc XCoreInsts[] = {
  { 0,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo4 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo6 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #16 = LIFETIME_END
  { 17,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #17 = ADD_2rus
  { 18,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #18 = ADD_3r
  { 19,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #19 = ADJCALLSTACKDOWN
  { 20,	2,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo10 },  // Inst #20 = ADJCALLSTACKUP
  { 21,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #21 = ANDNOT_2r
  { 22,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #22 = AND_3r
  { 23,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #23 = ASHR_l2rus
  { 24,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #24 = ASHR_l3r
  { 25,	1,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #25 = BAU_1r
  { 26,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #26 = BITREV_l2r
  { 27,	1,	0,	0,	2,	0|(1<<MCID::Call), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo12 },  // Inst #27 = BLA_1r
  { 28,	1,	0,	0,	4,	0|(1<<MCID::Call), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo5 },  // Inst #28 = BLRF_lu10
  { 29,	1,	0,	0,	2,	0|(1<<MCID::Call), 0x0ULL, ImplicitList1, ImplicitList2, OperandInfo5 },  // Inst #29 = BLRF_u10
  { 30,	2,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #30 = BRBF_lru6
  { 31,	2,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #31 = BRBF_ru6
  { 32,	2,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #32 = BRBT_lru6
  { 33,	2,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #33 = BRBT_ru6
  { 34,	1,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #34 = BRBU_lu6
  { 35,	1,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #35 = BRBU_u6
  { 36,	2,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #36 = BRFF_lru6
  { 37,	2,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #37 = BRFF_ru6
  { 38,	2,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #38 = BRFT_lru6
  { 39,	2,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #39 = BRFT_ru6
  { 40,	1,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #40 = BRFU_lu6
  { 41,	1,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #41 = BRFU_u6
  { 42,	2,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #42 = BR_JT
  { 43,	2,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #43 = BR_JT32
  { 44,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #44 = BYTEREV_l2r
  { 45,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #45 = CHKCT_2r
  { 46,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #46 = CHKCT_rus
  { 47,	0,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #47 = CLRE_0R
  { 48,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #48 = CLRPT_1R
  { 49,	1,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #49 = CLRSR_branch_lu6
  { 50,	1,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #50 = CLRSR_branch_u6
  { 51,	1,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #51 = CLRSR_lu6
  { 52,	1,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #52 = CLRSR_u6
  { 53,	2,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #53 = CLZ_l2r
  { 54,	5,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #54 = CRC8_l4r
  { 55,	4,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #55 = CRC_l3r
  { 56,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #56 = DCALL_0R
  { 57,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, 0 },  // Inst #57 = DENTSP_0R
  { 58,	1,	1,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #58 = DGETREG_1r
  { 59,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #59 = DIVS_l3r
  { 60,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #60 = DIVU_l3r
  { 61,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, 0 },  // Inst #61 = DRESTSP_0R
  { 62,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #62 = DRET_0R
  { 63,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #63 = ECALLF_1r
  { 64,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #64 = ECALLT_1r
  { 65,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #65 = EDU_1r
  { 66,	1,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #66 = EEU_1r
  { 67,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #67 = ENDIN_2r
  { 68,	1,	0,	0,	4,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #68 = ENTSP_lu6
  { 69,	1,	0,	0,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #69 = ENTSP_u6
  { 70,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #70 = EQ_2rus
  { 71,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #71 = EQ_3r
  { 72,	1,	0,	0,	4,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #72 = EXTSP_lu6
  { 73,	1,	0,	0,	2,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #73 = EXTSP_u6
  { 74,	1,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #74 = FREER_1r
  { 75,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #75 = FREET_0R
  { 76,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #76 = GETD_l2r
  { 77,	0,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList3, 0 },  // Inst #77 = GETED_0R
  { 78,	0,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList3, 0 },  // Inst #78 = GETET_0R
  { 79,	0,	0,	0,	2,	0, 0x0ULL, NULL, ImplicitList3, 0 },  // Inst #79 = GETID_0R
  { 80,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList3, 0 },  // Inst #80 = GETKEP_0R
  { 81,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList3, 0 },  // Inst #81 = GETKSP_0R
  { 82,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #82 = GETN_l2r
  { 83,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #83 = GETPS_l2r
  { 84,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #84 = GETR_rus
  { 85,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #85 = GETST_2r
  { 86,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #86 = GETTS_2r
  { 87,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #87 = INCT_2r
  { 88,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #88 = INITCP_2r
  { 89,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #89 = INITDP_2r
  { 90,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #90 = INITLR_l2r
  { 91,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #91 = INITPC_2r
  { 92,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #92 = INITSP_2r
  { 93,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #93 = INPW_l2rus
  { 94,	3,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #94 = INSHR_2r
  { 95,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #95 = INT_2r
  { 96,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #96 = IN_2r
  { 97,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #97 = KCALL_1r
  { 98,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList1, 0 },  // Inst #98 = KRET_0R
  { 99,	5,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #99 = LADD_l5r
  { 100,	3,	1,	0,	2,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #100 = LD16S_3r
  { 101,	3,	1,	0,	2,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #101 = LD8U_3r
  { 102,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #102 = LDA16B_l3r
  { 103,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #103 = LDA16F_l3r
  { 104,	1,	0,	0,	4,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, ImplicitList3, OperandInfo2 },  // Inst #104 = LDAPF_lu10
  { 105,	1,	0,	0,	4,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, ImplicitList3, OperandInfo2 },  // Inst #105 = LDAPF_lu10_ba
  { 106,	1,	0,	0,	2,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, ImplicitList3, OperandInfo2 },  // Inst #106 = LDAPF_u10
  { 107,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #107 = LDAWB_l2rus
  { 108,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #108 = LDAWB_l3r
  { 109,	2,	0,	0,	4,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, ImplicitList3, OperandInfo7 },  // Inst #109 = LDAWCP_lu6
  { 110,	2,	0,	0,	2,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, ImplicitList3, OperandInfo7 },  // Inst #110 = LDAWCP_u6
  { 111,	3,	1,	0,	4,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #111 = LDAWDP_lru6
  { 112,	3,	1,	0,	2,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #112 = LDAWDP_ru6
  { 113,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #113 = LDAWFI
  { 114,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #114 = LDAWF_l2rus
  { 115,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #115 = LDAWF_l3r
  { 116,	2,	1,	0,	4,	0, 0x0ULL, ImplicitList1, NULL, OperandInfo16 },  // Inst #116 = LDAWSP_lru6
  { 117,	2,	1,	0,	4,	0, 0x0ULL, ImplicitList1, NULL, OperandInfo21 },  // Inst #117 = LDAWSP_lru6_RRegs
  { 118,	2,	1,	0,	2,	0, 0x0ULL, ImplicitList1, NULL, OperandInfo16 },  // Inst #118 = LDAWSP_ru6
  { 119,	2,	1,	0,	2,	0, 0x0ULL, ImplicitList1, NULL, OperandInfo21 },  // Inst #119 = LDAWSP_ru6_RRegs
  { 120,	2,	1,	0,	4,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #120 = LDC_lru6
  { 121,	2,	1,	0,	2,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #121 = LDC_ru6
  { 122,	0,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, 0 },  // Inst #122 = LDET_0R
  { 123,	5,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #123 = LDIVU_l5r
  { 124,	0,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, 0 },  // Inst #124 = LDSED_0R
  { 125,	0,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, 0 },  // Inst #125 = LDSPC_0R
  { 126,	0,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, 0 },  // Inst #126 = LDSSR_0R
  { 127,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #127 = LDWCP_lru6
  { 128,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #128 = LDWCP_ru6
  { 129,	3,	1,	0,	4,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #129 = LDWDP_lru6
  { 130,	3,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #130 = LDWDP_ru6
  { 131,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #131 = LDWFI
  { 132,	2,	1,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, OperandInfo16 },  // Inst #132 = LDWSP_lru6
  { 133,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, OperandInfo16 },  // Inst #133 = LDWSP_ru6
  { 134,	3,	1,	0,	2,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #134 = LDW_2rus
  { 135,	3,	1,	0,	2,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #135 = LDW_3r
  { 136,	6,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #136 = LMUL_l6r
  { 137,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #137 = LSS_3r
  { 138,	5,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #138 = LSUB_l5r
  { 139,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #139 = LSU_3r
  { 140,	6,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #140 = MACCS_l4r
  { 141,	6,	2,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #141 = MACCU_l4r
  { 142,	1,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #142 = MJOIN_1r
  { 143,	2,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #143 = MKMSK_2r
  { 144,	2,	1,	0,	2,	0|(1<<MCID::Rematerializable), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #144 = MKMSK_rus
  { 145,	1,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #145 = MSYNC_1r
  { 146,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #146 = MUL_l3r
  { 147,	2,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #147 = NEG
  { 148,	2,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #148 = NOT
  { 149,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #149 = OR_3r
  { 150,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #150 = OUTCT_2r
  { 151,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #151 = OUTCT_rus
  { 152,	3,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #152 = OUTPW_l2rus
  { 153,	3,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #153 = OUTSHR_2r
  { 154,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #154 = OUTT_2r
  { 155,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #155 = OUT_2r
  { 156,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #156 = PEEK_2r
  { 157,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #157 = REMS_l3r
  { 158,	3,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #158 = REMU_l3r
  { 159,	1,	0,	0,	4,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::MayLoad)|(1<<MCID::Terminator), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #159 = RETSP_lu6
  { 160,	1,	0,	0,	2,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::MayLoad)|(1<<MCID::Terminator), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo2 },  // Inst #160 = RETSP_u6
  { 161,	4,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #161 = SELECT_CC
  { 162,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #162 = SETCLK_l2r
  { 163,	1,	0,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #163 = SETCP_1r
  { 164,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #164 = SETC_l2r
  { 165,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #165 = SETC_lru6
  { 166,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #166 = SETC_ru6
  { 167,	1,	0,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #167 = SETDP_1r
  { 168,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #168 = SETD_2r
  { 169,	1,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, NULL, OperandInfo12 },  // Inst #169 = SETEV_1r
  { 170,	0,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, NULL, 0 },  // Inst #170 = SETKEP_0R
  { 171,	2,	0,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #171 = SETN_l2r
  { 172,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #172 = SETPSC_2r
  { 173,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #173 = SETPS_l2r
  { 174,	2,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #174 = SETPT_2r
  { 175,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #175 = SETRDY_l2r
  { 176,	1,	0,	0,	2,	0, 0x0ULL, NULL, ImplicitList1, OperandInfo12 },  // Inst #176 = SETSP_1r
  { 177,	1,	0,	0,	4,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #177 = SETSR_branch_lu6
  { 178,	1,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #178 = SETSR_branch_u6
  { 179,	1,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #179 = SETSR_lu6
  { 180,	1,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #180 = SETSR_u6
  { 181,	2,	0,	0,	4,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #181 = SETTW_l2r
  { 182,	1,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, NULL, OperandInfo12 },  // Inst #182 = SETV_1r
  { 183,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #183 = SEXT_2r
  { 184,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #184 = SEXT_rus
  { 185,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #185 = SHL_2rus
  { 186,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #186 = SHL_3r
  { 187,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #187 = SHR_2rus
  { 188,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #188 = SHR_3r
  { 189,	0,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #189 = SSYNC_0r
  { 190,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #190 = ST16_l3r
  { 191,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #191 = ST8_l3r
  { 192,	0,	0,	0,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, 0 },  // Inst #192 = STET_0R
  { 193,	0,	0,	0,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, 0 },  // Inst #193 = STSED_0R
  { 194,	0,	0,	0,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, 0 },  // Inst #194 = STSPC_0R
  { 195,	0,	0,	0,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, NULL, 0 },  // Inst #195 = STSSR_0R
  { 196,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #196 = STWDP_lru6
  { 197,	3,	0,	0,	2,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #197 = STWDP_ru6
  { 198,	3,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #198 = STWFI
  { 199,	2,	0,	0,	4,	0|(1<<MCID::MayStore), 0x0ULL, ImplicitList1, NULL, OperandInfo16 },  // Inst #199 = STWSP_lru6
  { 200,	2,	0,	0,	2,	0|(1<<MCID::MayStore), 0x0ULL, ImplicitList1, NULL, OperandInfo16 },  // Inst #200 = STWSP_ru6
  { 201,	3,	0,	0,	2,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #201 = STW_2rus
  { 202,	3,	0,	0,	4,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #202 = STW_l3r
  { 203,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #203 = SUB_2rus
  { 204,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #204 = SUB_3r
  { 205,	1,	0,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #205 = SYNCR_1r
  { 206,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #206 = TESTCT_2r
  { 207,	2,	1,	0,	4,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #207 = TESTLCL_l2r
  { 208,	2,	1,	0,	2,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #208 = TESTWCT_2r
  { 209,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #209 = TSTART_1R
  { 210,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #210 = WAITEF_1R
  { 211,	1,	0,	0,	2,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #211 = WAITET_1R
  { 212,	0,	0,	0,	2,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::MayLoad)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #212 = WAITEU_0R
  { 213,	3,	1,	0,	4,	0, 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #213 = XOR_l3r
  { 214,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #214 = ZEXT_2r
  { 215,	3,	1,	0,	2,	0, 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #215 = ZEXT_rus
};

extern const char XCoreInstrNameData[] = {
  /* 0 */ 'L', 'D', 'A', 'P', 'F', '_', 'u', '1', '0', 0,
  /* 10 */ 'B', 'L', 'R', 'F', '_', 'u', '1', '0', 0,
  /* 19 */ 'L', 'D', 'A', 'P', 'F', '_', 'l', 'u', '1', '0', 0,
  /* 30 */ 'B', 'L', 'R', 'F', '_', 'l', 'u', '1', '0', 0,
  /* 40 */ 'B', 'R', '_', 'J', 'T', '3', '2', 0,
  /* 48 */ 'L', 'D', 'A', 'W', 'C', 'P', '_', 'u', '6', 0,
  /* 58 */ 'R', 'E', 'T', 'S', 'P', '_', 'u', '6', 0,
  /* 67 */ 'E', 'N', 'T', 'S', 'P', '_', 'u', '6', 0,
  /* 76 */ 'E', 'X', 'T', 'S', 'P', '_', 'u', '6', 0,
  /* 85 */ 'C', 'L', 'R', 'S', 'R', '_', 'u', '6', 0,
  /* 94 */ 'S', 'E', 'T', 'S', 'R', '_', 'u', '6', 0,
  /* 103 */ 'B', 'R', 'B', 'U', '_', 'u', '6', 0,
  /* 111 */ 'B', 'R', 'F', 'U', '_', 'u', '6', 0,
  /* 119 */ 'C', 'L', 'R', 'S', 'R', '_', 'b', 'r', 'a', 'n', 'c', 'h', '_', 'u', '6', 0,
  /* 135 */ 'S', 'E', 'T', 'S', 'R', '_', 'b', 'r', 'a', 'n', 'c', 'h', '_', 'u', '6', 0,
  /* 151 */ 'L', 'D', 'A', 'W', 'C', 'P', '_', 'l', 'u', '6', 0,
  /* 162 */ 'R', 'E', 'T', 'S', 'P', '_', 'l', 'u', '6', 0,
  /* 172 */ 'E', 'N', 'T', 'S', 'P', '_', 'l', 'u', '6', 0,
  /* 182 */ 'E', 'X', 'T', 'S', 'P', '_', 'l', 'u', '6', 0,
  /* 192 */ 'C', 'L', 'R', 'S', 'R', '_', 'l', 'u', '6', 0,
  /* 202 */ 'S', 'E', 'T', 'S', 'R', '_', 'l', 'u', '6', 0,
  /* 212 */ 'B', 'R', 'B', 'U', '_', 'l', 'u', '6', 0,
  /* 221 */ 'B', 'R', 'F', 'U', '_', 'l', 'u', '6', 0,
  /* 230 */ 'C', 'L', 'R', 'S', 'R', '_', 'b', 'r', 'a', 'n', 'c', 'h', '_', 'l', 'u', '6', 0,
  /* 247 */ 'S', 'E', 'T', 'S', 'R', '_', 'b', 'r', 'a', 'n', 'c', 'h', '_', 'l', 'u', '6', 0,
  /* 264 */ 'L', 'D', 'C', '_', 'r', 'u', '6', 0,
  /* 272 */ 'S', 'E', 'T', 'C', '_', 'r', 'u', '6', 0,
  /* 281 */ 'B', 'R', 'B', 'F', '_', 'r', 'u', '6', 0,
  /* 290 */ 'B', 'R', 'F', 'F', '_', 'r', 'u', '6', 0,
  /* 299 */ 'L', 'D', 'W', 'C', 'P', '_', 'r', 'u', '6', 0,
  /* 309 */ 'L', 'D', 'A', 'W', 'D', 'P', '_', 'r', 'u', '6', 0,
  /* 320 */ 'L', 'D', 'W', 'D', 'P', '_', 'r', 'u', '6', 0,
  /* 330 */ 'S', 'T', 'W', 'D', 'P', '_', 'r', 'u', '6', 0,
  /* 340 */ 'L', 'D', 'A', 'W', 'S', 'P', '_', 'r', 'u', '6', 0,
  /* 351 */ 'L', 'D', 'W', 'S', 'P', '_', 'r', 'u', '6', 0,
  /* 361 */ 'S', 'T', 'W', 'S', 'P', '_', 'r', 'u', '6', 0,
  /* 371 */ 'B', 'R', 'B', 'T', '_', 'r', 'u', '6', 0,
  /* 380 */ 'B', 'R', 'F', 'T', '_', 'r', 'u', '6', 0,
  /* 389 */ 'L', 'D', 'C', '_', 'l', 'r', 'u', '6', 0,
  /* 398 */ 'S', 'E', 'T', 'C', '_', 'l', 'r', 'u', '6', 0,
  /* 408 */ 'B', 'R', 'B', 'F', '_', 'l', 'r', 'u', '6', 0,
  /* 418 */ 'B', 'R', 'F', 'F', '_', 'l', 'r', 'u', '6', 0,
  /* 428 */ 'L', 'D', 'W', 'C', 'P', '_', 'l', 'r', 'u', '6', 0,
  /* 439 */ 'L', 'D', 'A', 'W', 'D', 'P', '_', 'l', 'r', 'u', '6', 0,
  /* 451 */ 'L', 'D', 'W', 'D', 'P', '_', 'l', 'r', 'u', '6', 0,
  /* 462 */ 'S', 'T', 'W', 'D', 'P', '_', 'l', 'r', 'u', '6', 0,
  /* 473 */ 'L', 'D', 'A', 'W', 'S', 'P', '_', 'l', 'r', 'u', '6', 0,
  /* 485 */ 'L', 'D', 'W', 'S', 'P', '_', 'l', 'r', 'u', '6', 0,
  /* 496 */ 'S', 'T', 'W', 'S', 'P', '_', 'l', 'r', 'u', '6', 0,
  /* 507 */ 'B', 'R', 'B', 'T', '_', 'l', 'r', 'u', '6', 0,
  /* 517 */ 'B', 'R', 'F', 'T', '_', 'l', 'r', 'u', '6', 0,
  /* 527 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', 0,
  /* 537 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 550 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 563 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 570 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 580 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 593 */ 'N', 'E', 'G', 0,
  /* 597 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 612 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 626 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 640 */ 'L', 'D', 'A', 'W', 'F', 'I', 0,
  /* 647 */ 'L', 'D', 'W', 'F', 'I', 0,
  /* 653 */ 'S', 'T', 'W', 'F', 'I', 0,
  /* 659 */ 'P', 'H', 'I', 0,
  /* 663 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 672 */ 'P', 'R', 'O', 'L', 'O', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 685 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 694 */ 'K', 'I', 'L', 'L', 0,
  /* 699 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 709 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 726 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 741 */ 'L', 'D', 'S', 'P', 'C', '_', '0', 'R', 0,
  /* 750 */ 'S', 'T', 'S', 'P', 'C', '_', '0', 'R', 0,
  /* 759 */ 'L', 'D', 'S', 'E', 'D', '_', '0', 'R', 0,
  /* 768 */ 'S', 'T', 'S', 'E', 'D', '_', '0', 'R', 0,
  /* 777 */ 'G', 'E', 'T', 'E', 'D', '_', '0', 'R', 0,
  /* 786 */ 'G', 'E', 'T', 'I', 'D', '_', '0', 'R', 0,
  /* 795 */ 'C', 'L', 'R', 'E', '_', '0', 'R', 0,
  /* 803 */ 'D', 'C', 'A', 'L', 'L', '_', '0', 'R', 0,
  /* 812 */ 'G', 'E', 'T', 'K', 'E', 'P', '_', '0', 'R', 0,
  /* 822 */ 'S', 'E', 'T', 'K', 'E', 'P', '_', '0', 'R', 0,
  /* 832 */ 'G', 'E', 'T', 'K', 'S', 'P', '_', '0', 'R', 0,
  /* 842 */ 'D', 'E', 'N', 'T', 'S', 'P', '_', '0', 'R', 0,
  /* 852 */ 'D', 'R', 'E', 'S', 'T', 'S', 'P', '_', '0', 'R', 0,
  /* 863 */ 'L', 'D', 'S', 'S', 'R', '_', '0', 'R', 0,
  /* 872 */ 'S', 'T', 'S', 'S', 'R', '_', '0', 'R', 0,
  /* 881 */ 'L', 'D', 'E', 'T', '_', '0', 'R', 0,
  /* 889 */ 'F', 'R', 'E', 'E', 'T', '_', '0', 'R', 0,
  /* 898 */ 'D', 'R', 'E', 'T', '_', '0', 'R', 0,
  /* 906 */ 'K', 'R', 'E', 'T', '_', '0', 'R', 0,
  /* 914 */ 'G', 'E', 'T', 'E', 'T', '_', '0', 'R', 0,
  /* 923 */ 'S', 'T', 'E', 'T', '_', '0', 'R', 0,
  /* 931 */ 'W', 'A', 'I', 'T', 'E', 'U', '_', '0', 'R', 0,
  /* 941 */ 'W', 'A', 'I', 'T', 'E', 'F', '_', '1', 'R', 0,
  /* 951 */ 'W', 'A', 'I', 'T', 'E', 'T', '_', '1', 'R', 0,
  /* 961 */ 'C', 'L', 'R', 'P', 'T', '_', '1', 'R', 0,
  /* 970 */ 'T', 'S', 'T', 'A', 'R', 'T', '_', '1', 'R', 0,
  /* 980 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 997 */ 'B', 'R', '_', 'J', 'T', 0,
  /* 1003 */ 'N', 'O', 'T', 0,
  /* 1007 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 1022 */ 'C', 'O', 'P', 'Y', 0,
  /* 1027 */ 'L', 'D', 'A', 'P', 'F', '_', 'l', 'u', '1', '0', '_', 'b', 'a', 0,
  /* 1041 */ 'S', 'S', 'Y', 'N', 'C', '_', '0', 'r', 0,
  /* 1050 */ 'B', 'L', 'A', '_', '1', 'r', 0,
  /* 1057 */ 'M', 'S', 'Y', 'N', 'C', '_', '1', 'r', 0,
  /* 1066 */ 'E', 'C', 'A', 'L', 'L', 'F', '_', '1', 'r', 0,
  /* 1076 */ 'D', 'G', 'E', 'T', 'R', 'E', 'G', '_', '1', 'r', 0,
  /* 1087 */ 'K', 'C', 'A', 'L', 'L', '_', '1', 'r', 0,
  /* 1096 */ 'M', 'J', 'O', 'I', 'N', '_', '1', 'r', 0,
  /* 1105 */ 'S', 'E', 'T', 'C', 'P', '_', '1', 'r', 0,
  /* 1114 */ 'S', 'E', 'T', 'D', 'P', '_', '1', 'r', 0,
  /* 1123 */ 'S', 'E', 'T', 'S', 'P', '_', '1', 'r', 0,
  /* 1132 */ 'S', 'Y', 'N', 'C', 'R', '_', '1', 'r', 0,
  /* 1141 */ 'F', 'R', 'E', 'E', 'R', '_', '1', 'r', 0,
  /* 1150 */ 'E', 'C', 'A', 'L', 'L', 'T', '_', '1', 'r', 0,
  /* 1160 */ 'B', 'A', 'U', '_', '1', 'r', 0,
  /* 1167 */ 'E', 'D', 'U', '_', '1', 'r', 0,
  /* 1174 */ 'E', 'E', 'U', '_', '1', 'r', 0,
  /* 1181 */ 'S', 'E', 'T', 'E', 'V', '_', '1', 'r', 0,
  /* 1190 */ 'S', 'E', 'T', 'V', '_', '1', 'r', 0,
  /* 1198 */ 'I', 'N', 'I', 'T', 'P', 'C', '_', '2', 'r', 0,
  /* 1208 */ 'S', 'E', 'T', 'P', 'S', 'C', '_', '2', 'r', 0,
  /* 1218 */ 'S', 'E', 'T', 'D', '_', '2', 'r', 0,
  /* 1226 */ 'P', 'E', 'E', 'K', '_', '2', 'r', 0,
  /* 1234 */ 'M', 'K', 'M', 'S', 'K', '_', '2', 'r', 0,
  /* 1243 */ 'E', 'N', 'D', 'I', 'N', '_', '2', 'r', 0,
  /* 1252 */ 'I', 'N', 'I', 'T', 'C', 'P', '_', '2', 'r', 0,
  /* 1262 */ 'I', 'N', 'I', 'T', 'D', 'P', '_', '2', 'r', 0,
  /* 1272 */ 'I', 'N', 'I', 'T', 'S', 'P', '_', '2', 'r', 0,
  /* 1282 */ 'I', 'N', 'S', 'H', 'R', '_', '2', 'r', 0,
  /* 1291 */ 'O', 'U', 'T', 'S', 'H', 'R', '_', '2', 'r', 0,
  /* 1301 */ 'G', 'E', 'T', 'T', 'S', '_', '2', 'r', 0,
  /* 1310 */ 'C', 'H', 'K', 'C', 'T', '_', '2', 'r', 0,
  /* 1319 */ 'I', 'N', 'C', 'T', '_', '2', 'r', 0,
  /* 1327 */ 'T', 'E', 'S', 'T', 'C', 'T', '_', '2', 'r', 0,
  /* 1337 */ 'O', 'U', 'T', 'C', 'T', '_', '2', 'r', 0,
  /* 1346 */ 'T', 'E', 'S', 'T', 'W', 'C', 'T', '_', '2', 'r', 0,
  /* 1357 */ 'I', 'N', 'T', '_', '2', 'r', 0,
  /* 1364 */ 'A', 'N', 'D', 'N', 'O', 'T', '_', '2', 'r', 0,
  /* 1374 */ 'S', 'E', 'T', 'P', 'T', '_', '2', 'r', 0,
  /* 1383 */ 'G', 'E', 'T', 'S', 'T', '_', '2', 'r', 0,
  /* 1392 */ 'O', 'U', 'T', 'T', '_', '2', 'r', 0,
  /* 1400 */ 'O', 'U', 'T', '_', '2', 'r', 0,
  /* 1407 */ 'S', 'E', 'X', 'T', '_', '2', 'r', 0,
  /* 1415 */ 'Z', 'E', 'X', 'T', '_', '2', 'r', 0,
  /* 1423 */ 'S', 'E', 'T', 'C', '_', 'l', '2', 'r', 0,
  /* 1432 */ 'G', 'E', 'T', 'D', '_', 'l', '2', 'r', 0,
  /* 1441 */ 'S', 'E', 'T', 'C', 'L', 'K', '_', 'l', '2', 'r', 0,
  /* 1452 */ 'T', 'E', 'S', 'T', 'L', 'C', 'L', '_', 'l', '2', 'r', 0,
  /* 1464 */ 'G', 'E', 'T', 'N', '_', 'l', '2', 'r', 0,
  /* 1473 */ 'S', 'E', 'T', 'N', '_', 'l', '2', 'r', 0,
  /* 1482 */ 'I', 'N', 'I', 'T', 'L', 'R', '_', 'l', '2', 'r', 0,
  /* 1493 */ 'G', 'E', 'T', 'P', 'S', '_', 'l', '2', 'r', 0,
  /* 1503 */ 'S', 'E', 'T', 'P', 'S', '_', 'l', '2', 'r', 0,
  /* 1513 */ 'B', 'Y', 'T', 'E', 'R', 'E', 'V', '_', 'l', '2', 'r', 0,
  /* 1525 */ 'B', 'I', 'T', 'R', 'E', 'V', '_', 'l', '2', 'r', 0,
  /* 1536 */ 'S', 'E', 'T', 'T', 'W', '_', 'l', '2', 'r', 0,
  /* 1546 */ 'S', 'E', 'T', 'R', 'D', 'Y', '_', 'l', '2', 'r', 0,
  /* 1557 */ 'C', 'L', 'Z', '_', 'l', '2', 'r', 0,
  /* 1565 */ 'S', 'U', 'B', '_', '3', 'r', 0,
  /* 1572 */ 'A', 'D', 'D', '_', '3', 'r', 0,
  /* 1579 */ 'A', 'N', 'D', '_', '3', 'r', 0,
  /* 1586 */ 'S', 'H', 'L', '_', '3', 'r', 0,
  /* 1593 */ 'E', 'Q', '_', '3', 'r', 0,
  /* 1599 */ 'S', 'H', 'R', '_', '3', 'r', 0,
  /* 1606 */ 'O', 'R', '_', '3', 'r', 0,
  /* 1612 */ 'L', 'D', '1', '6', 'S', '_', '3', 'r', 0,
  /* 1621 */ 'L', 'S', 'S', '_', '3', 'r', 0,
  /* 1628 */ 'L', 'D', '8', 'U', '_', '3', 'r', 0,
  /* 1636 */ 'L', 'S', 'U', '_', '3', 'r', 0,
  /* 1643 */ 'L', 'D', 'W', '_', '3', 'r', 0,
  /* 1650 */ 'S', 'T', '1', '6', '_', 'l', '3', 'r', 0,
  /* 1659 */ 'S', 'T', '8', '_', 'l', '3', 'r', 0,
  /* 1667 */ 'L', 'D', 'A', '1', '6', 'B', '_', 'l', '3', 'r', 0,
  /* 1678 */ 'L', 'D', 'A', 'W', 'B', '_', 'l', '3', 'r', 0,
  /* 1688 */ 'C', 'R', 'C', '_', 'l', '3', 'r', 0,
  /* 1696 */ 'L', 'D', 'A', '1', '6', 'F', '_', 'l', '3', 'r', 0,
  /* 1707 */ 'L', 'D', 'A', 'W', 'F', '_', 'l', '3', 'r', 0,
  /* 1717 */ 'M', 'U', 'L', '_', 'l', '3', 'r', 0,
  /* 1725 */ 'A', 'S', 'H', 'R', '_', 'l', '3', 'r', 0,
  /* 1734 */ 'X', 'O', 'R', '_', 'l', '3', 'r', 0,
  /* 1742 */ 'R', 'E', 'M', 'S', '_', 'l', '3', 'r', 0,
  /* 1751 */ 'D', 'I', 'V', 'S', '_', 'l', '3', 'r', 0,
  /* 1760 */ 'R', 'E', 'M', 'U', '_', 'l', '3', 'r', 0,
  /* 1769 */ 'D', 'I', 'V', 'U', '_', 'l', '3', 'r', 0,
  /* 1778 */ 'S', 'T', 'W', '_', 'l', '3', 'r', 0,
  /* 1786 */ 'C', 'R', 'C', '8', '_', 'l', '4', 'r', 0,
  /* 1795 */ 'M', 'A', 'C', 'C', 'S', '_', 'l', '4', 'r', 0,
  /* 1805 */ 'M', 'A', 'C', 'C', 'U', '_', 'l', '4', 'r', 0,
  /* 1815 */ 'L', 'S', 'U', 'B', '_', 'l', '5', 'r', 0,
  /* 1824 */ 'L', 'A', 'D', 'D', '_', 'l', '5', 'r', 0,
  /* 1833 */ 'L', 'D', 'I', 'V', 'U', '_', 'l', '5', 'r', 0,
  /* 1843 */ 'L', 'M', 'U', 'L', '_', 'l', '6', 'r', 0,
  /* 1852 */ 'L', 'D', 'A', 'W', 'S', 'P', '_', 'r', 'u', '6', '_', 'R', 'R', 'e', 'g', 's', 0,
  /* 1869 */ 'L', 'D', 'A', 'W', 'S', 'P', '_', 'l', 'r', 'u', '6', '_', 'R', 'R', 'e', 'g', 's', 0,
  /* 1887 */ 'S', 'U', 'B', '_', '2', 'r', 'u', 's', 0,
  /* 1896 */ 'A', 'D', 'D', '_', '2', 'r', 'u', 's', 0,
  /* 1905 */ 'S', 'H', 'L', '_', '2', 'r', 'u', 's', 0,
  /* 1914 */ 'E', 'Q', '_', '2', 'r', 'u', 's', 0,
  /* 1922 */ 'S', 'H', 'R', '_', '2', 'r', 'u', 's', 0,
  /* 1931 */ 'L', 'D', 'W', '_', '2', 'r', 'u', 's', 0,
  /* 1940 */ 'S', 'T', 'W', '_', '2', 'r', 'u', 's', 0,
  /* 1949 */ 'L', 'D', 'A', 'W', 'B', '_', 'l', '2', 'r', 'u', 's', 0,
  /* 1961 */ 'L', 'D', 'A', 'W', 'F', '_', 'l', '2', 'r', 'u', 's', 0,
  /* 1973 */ 'A', 'S', 'H', 'R', '_', 'l', '2', 'r', 'u', 's', 0,
  /* 1984 */ 'I', 'N', 'P', 'W', '_', 'l', '2', 'r', 'u', 's', 0,
  /* 1995 */ 'O', 'U', 'T', 'P', 'W', '_', 'l', '2', 'r', 'u', 's', 0,
  /* 2007 */ 'M', 'K', 'M', 'S', 'K', '_', 'r', 'u', 's', 0,
  /* 2017 */ 'G', 'E', 'T', 'R', '_', 'r', 'u', 's', 0,
  /* 2026 */ 'C', 'H', 'K', 'C', 'T', '_', 'r', 'u', 's', 0,
  /* 2036 */ 'O', 'U', 'T', 'C', 'T', '_', 'r', 'u', 's', 0,
  /* 2046 */ 'S', 'E', 'X', 'T', '_', 'r', 'u', 's', 0,
  /* 2055 */ 'Z', 'E', 'X', 'T', '_', 'r', 'u', 's', 0,
};

extern const unsigned XCoreInstrNameIndices[] = {
    659U, 699U, 672U, 685U, 663U, 694U, 597U, 612U, 
    580U, 626U, 980U, 570U, 550U, 1022U, 563U, 1007U, 
    537U, 1896U, 1572U, 709U, 726U, 1364U, 1579U, 1973U, 
    1725U, 1160U, 1525U, 1050U, 30U, 10U, 408U, 281U, 
    507U, 371U, 212U, 103U, 418U, 290U, 517U, 380U, 
    221U, 111U, 997U, 40U, 1513U, 1310U, 2026U, 795U, 
    961U, 230U, 119U, 192U, 85U, 1557U, 1786U, 1688U, 
    803U, 842U, 1076U, 1751U, 1769U, 852U, 898U, 1066U, 
    1150U, 1167U, 1174U, 1243U, 172U, 67U, 1914U, 1593U, 
    182U, 76U, 1141U, 889U, 1432U, 777U, 914U, 786U, 
    812U, 832U, 1464U, 1493U, 2017U, 1383U, 1301U, 1319U, 
    1252U, 1262U, 1482U, 1198U, 1272U, 1984U, 1282U, 1357U, 
    1246U, 1087U, 906U, 1824U, 1612U, 1628U, 1667U, 1696U, 
    19U, 1027U, 0U, 1949U, 1678U, 151U, 48U, 439U, 
    309U, 640U, 1961U, 1707U, 473U, 1869U, 340U, 1852U, 
    389U, 264U, 881U, 1833U, 759U, 741U, 863U, 428U, 
    299U, 451U, 320U, 647U, 485U, 351U, 1931U, 1643U, 
    1843U, 1621U, 1815U, 1636U, 1795U, 1805U, 1096U, 1234U, 
    2007U, 1057U, 1717U, 593U, 1003U, 1606U, 1337U, 2036U, 
    1995U, 1291U, 1392U, 1400U, 1226U, 1742U, 1760U, 162U, 
    58U, 527U, 1441U, 1105U, 1423U, 398U, 272U, 1114U, 
    1218U, 1181U, 822U, 1473U, 1208U, 1503U, 1374U, 1546U, 
    1123U, 247U, 135U, 202U, 94U, 1536U, 1190U, 1407U, 
    2046U, 1905U, 1586U, 1922U, 1599U, 1041U, 1650U, 1659U, 
    923U, 768U, 750U, 872U, 462U, 330U, 653U, 496U, 
    361U, 1940U, 1778U, 1887U, 1565U, 1132U, 1327U, 1452U, 
    1346U, 970U, 941U, 951U, 931U, 1734U, 1415U, 2055U, 
};

static inline void InitXCoreMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(XCoreInsts, XCoreInstrNameIndices, XCoreInstrNameData, 216);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct XCoreGenInstrInfo : public TargetInstrInfo {
  explicit XCoreGenInstrInfo(int SO = -1, int DO = -1);
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR
#undef GET_INSTRINFO_CTOR
namespace llvm {
extern const MCInstrDesc XCoreInsts[];
extern const unsigned XCoreInstrNameIndices[];
extern const char XCoreInstrNameData[];
XCoreGenInstrInfo::XCoreGenInstrInfo(int SO, int DO)
  : TargetInstrInfo(SO, DO) {
  InitMCInstrInfo(XCoreInsts, XCoreInstrNameIndices, XCoreInstrNameData, 216);
}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR

